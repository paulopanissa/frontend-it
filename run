#!/bin/bash

function install() {
  docker exec -it frontend "$@"
}

function_exists() {
  declare -f -F $1 > /dev/null
  return $?
}

printf ""


# | ----------------------------------------------------------------------------
# | Start Dev
# | ----------------------------------------------------------------------------
function start() {
  docker-compose up -d api-server frontend $1;
}

# | ----------------------------------------------------------------------------
# | Start prod
# | ----------------------------------------------------------------------------
function prod() {
  docker-compose up  -d --build api-server nginx-prod $1;
}

# | ----------------------------------------------------------------------------
# | Stop
# | ----------------------------------------------------------------------------
function stop() {
  docker-compose stop
}

# | ----------------------------------------------------------------------------
# | Restart
# | ----------------------------------------------------------------------------
function restart() {
  case "$1" in
    api) docker restart api-server
      ;;
    dev) docker restart frontend
      ;;
    prod) docker restart nginx-prod
      ;;
    *) stop; start
      ;;
  esac
}

# | ----------------------------------------------------------------------------
# | Bash Commands
# | ----------------------------------------------------------------------------
function bash() {
  case "$1" in
    frontend) docker exec -ti frontend bash $2
     ;;
    nginx) docker exec -ti nginx-prod bash $2
     ;;
    *)      echo "Comandos - Valid->frontend"
          ;;
  esac
}

# | ----------------------------------------------------------------------------
# | Test
# | ----------------------------------------------------------------------------
function run_test() {
  bash test
}


# | ----------------------------------------------------------------------------
# | Recreate
# | ----------------------------------------------------------------------------
function recreate() {
  stop
  docker-compose rm -f
  start 
}


# | ----------------------------------------------------------------------------
# | Function for check func exists
# | ----------------------------------------------------------------------------
function_exists() {
  declare -f -F $1 > /dev/null
  return $?
}

# if [ "$UID" -ne 0 ]
#   then echo "Please run as root"
#   exit
# fi

if [ $# -lt 1 ]
then
  echo "Comandos: start | stop | restart | bash frontend | "
  exit
fi

# | ----------------------------------------------------------------------------
# | Switch case commands
# | ----------------------------------------------------------------------------
case "$1" in
  yarn) function_exists install && install $@
    ;;
  npm)  function_exists install && install $@
    ;;
  start) function_exists start && start $2
    ;;
  prod) function_exists prod && prod $2
    ;;
  stop)  function_exists stop && stop $2
    ;;
  restart)  function_exists restart && restart $2
    ;;
  bash) function_exists bash && bash $2
    ;;
  recreate) function_exists recreate && recreate
    ;;
  *)  echo "Invalid command - Valid->start|prod|stop|restart 'api-server, frontend, nginx-prod'|bash |test"
    ;;
esac